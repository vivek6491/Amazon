pipeline {
    agent any

    environment {
        SONARQUBE = 'SonarQubeServer'
        MAVEN_HOME = tool 'Maven 3.9.11'
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/vivek6491/Amazon.git', branch: 'master'
            }
        }

        stage('Build WAR') {
    steps {
        dir('Amazon-Web') {  // Change directory to where the pom.xml exists
            sh "${MAVEN_HOME}/bin/mvn clean install -DskipTests"
        }
    }
}

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv("${SONARQUBE}") {
                    sh "${MAVEN_HOME}/bin/mvn sonar:sonar"
                }
            }
        }

        stage('Quality Gate') {
            steps {
                timeout(time: 2, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }

        stage('Deploy to Tomcat via Ansible') {
            steps {
                withCredentials([string(credentialsId: 'ansible-vault-password', variable: 'VAULT_PASS')]) {
                    sh '''
                        echo "$VAULT_PASS" > vault.txt
                        chmod 600 vault.txt
                        cp Amazon-Web/target/Amazon.war ansible/
                        ansible-playbook -i ansible/hosts.ini ansible/deploy-tomcat.yml --vault-password-file vault.txt
                        rm -f vault.txt
                    '''
                }
            }
        }
    }

    post {
        success {
            echo '✅ Deployment successful.'
        }
        failure {
            echo '❌ Pipeline failed. Check logs.'
        }
    }
}
